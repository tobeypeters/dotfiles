# The MIT License(MIT)
# Copyright(c), Tobey Peters, https://github.com/tobeypeters
# is hereby granted, free of charge, to any person obtaining a copy of this software
# and associated documentation files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
# OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

# i3 configuration

set $mod Mod4
set $editor code
set $exec exec --no-startup-id
set $exec_always exec_always --no-startup-id

# Window---------------------------------
new_window pixel 1
new_float normal
hide_edge_borders both
show_marks yes

# Font -----------------------------------
font pango:System San Francisco Display 10

# Mouse----------------------------------
focus_follows_mouse no
# Use Mouse+$mod to drag floating windows
floating_modifier $mod

# Rules-----------------------------------
# Float:
for_window [class="Alacritty"] floating enable
for_window [class="ark"] floating enable
for_window [class="ckb-next"] floating enable
for_window [class="Code"] floating enable
for_window [class="Cubic_wizard.py"] floating enable
for_window [class="Cycle_switcher"] floating enable
for_window [class="discord"] floating enable
for_window [class="discover"] floating enable
for_window [class="feh"] floating enable
for_window [class="Feren-store.py"] floating enable
for_window [class="ffplay"] floating enable
for_window [class="File-roller"] floating enable
for_window [class="Firefox"] floating enable
for_window [class="Gdebi-gtk"] floating enable
for_window [class="Gedit"] floating enable
for_window [class="ghostwriter"] floating enable
for_window [class="Gimp"] floating enable
for_window [class="(?i)^gnome*"] floating enable
for_window [title="Task Manager - Google Chrome"] floating enable
for_window [class="GParted"] floating enable
for_window [class="Gufw.py"] floating enable
for_window [class="Io.elementary.photos"] floating enable
for_window [class="jetbrains-pycharm-ce"] floating enable
for_window [class="kate"] floating enable
for_window [class="kinfocenter"] floating enable
for_window [class="konsole"] floating enable
for_window [class="ksysguard"] floating enable
for_window [class="Lightdm-settings"] floating enable
for_window [class="Luakit"] floating enable
for_window [class="Lxappearance"] floating enable
for_window [class="Lxtask"] floating enable
for_window [class="Microsoft-edge-dev"] floating enable
for_window [class="MintUpdate.py"] floating enable
for_window [class="mpv"] floating enable
for_window [class="Nautilus"] floating enable
for_window [class="Nemo"] floating enable
for_window [class="Nm-connection-editor"] floating enable
for_window [class="Nyxt"] floating enable
for_window [class="Opera"] floating enable
for_window [class="Org.gnome.Software"] floating enable
for_window [class="Pavucontrol"] floating enable
for_window [class="Quickgui"] floating enable
for_window [class="Snap-store"] floating enable
for_window [class="Software-properties-gtk"] floating enable
for_window [class="Sonata"] floating enable
for_window [class="Spicy"] floating enable
for_window [class="(?i)^steam*"] floating enable
for_window [class="strawberry"] floating enable
for_window [class="systemsettings"] floating enable
for_window [class="system_updater"] floating enable
for_window [class="Thorium-browser"] floating enable
for_window [class="Tk"] floating enable
for_window [class="Tp_popup_menu"] floating enable
for_window [class="(?i)^virtualBox*"] floating enable
for_window [class="Virt-manager"] floating enable
for_window [class="vlc"] floating enable
for_window [class="x-terminal-emulator"] floating enable
for_window [class="XTerm"] floating enable
for_window [class="Yad"] floating enable
# Resize:
for_window [class="Alacritty"] resize set 900 500
for_window [class="Gnome-system-monitor"] resize set 900 500
for_window [class="konsole"] resize set 900 500
for_window [class="system_updater"] resize set 900 500
for_window [class="x-terminal-emulator"] resize set 900 500
for_window [class="XTerm"] resize set 900 500
# Move:
for_window [class="krunner"] move position 1450 20
for_window [class="Netflix"] move container to workspace 9
for_window [class="system_updater"] move position 1020 40
for_window [title="shrineOS"] move container to workspace 3
# Sticky:
for_window [class="Audacious"] sticky enable
for_window [class="mpv"] sticky enable
for_window [class="Netflix"] sticky enable
for_window [class="vlc"] sticky enable
# Titlebar:
for_window [class="system_updater"] border normal
# ----------------------------------------

# Colors and Wallpaper -------------------
set $fp ~/Pictures/Wallpapers
set $fl ~/Pictures/Wallpapers/wallpaper.lock
set $flp  ~/Pictures/Wallpapers/wallpaper.prev

$exec_always [ ! -f $fl ] && wal_output=$(./scripts/random_wall.py $fp) && echo "$wal_output" > $flp && wal -i "$wal_output" &
$exec_always [ -f $fl ] && wal -i $(cat $flp) &
$exec_always cat ~/.cache/wal/sequences &

# Set colors from Xresources
# Change 'color7' and 'color2' to whatever you want i3 to use
set_from_resource $bg i3wm.color0 #000000
set_from_resource $fg i3wm.color1 #ffffff

# class                 border  backgr. text    indicator child_border
client.focused          $fg     $bg     $fg  $bg       $fg
client.focused_inactive $bg     $bg     $fg  $bg       $bg
client.unfocused        $bg     $bg     $fg  $bg       $bg
client.urgent           $bg     $bg     $fg  $bg       $bg
client.placeholder      $bg     $bg     $fg  $bg       $bg
# ----------------------------------------

client.background       $bg

bindsym $mod+Shift+r restart # restart

# Edit-----------------------------------
bindsym $mod+c exec $editor ~/.config/i3/config
bindsym $mod+Shift+c exec $editor ~/.config/polybar/config.ini
# ----------------------------------------

# Window----------------------------------
# Fullscreen:
bindsym $mod+f fullscreen toggle

# Kill:
bindsym $mod+F4 kill
bindsym --whole-window $mod+button2 kill

# Floating:
# Toggle tiling / floating / fullscreen -
bindsym $mod+Shift+space floating toggle

# Focus:
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right
bindsym $mod+space focus mode_toggle

# Layout:
bindsym $mod+s layout stacking, exec polybar-msg cmd hide
bindsym $mod+w layout tabbed, exec polybar-msg cmd hide
bindsym $mod+e layout toggle split, exec polybar-msg cmd show

# Workspace------------------------------
# switch:
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# Move Container:
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
# ----------------------------------------

bindsym $mod+n exec nemo
bindsym $mod+F2 exec krunner

bindsym Ctrl+$mod+Delete exec gnome-system-monitor

# sudo update-alternatives --config x-terminal-emulator
bindsym $mod+Return exec i3-sensible-terminal

# Menus-----------------------------------
bindsym $mod+d exec dmenu_run -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"
bindsym $mod+m exec ~/.config/polybar/scripts/sysmenu.py --mc "$bg" "$fg" "$fg" "$bg"
bindsym $mod+p exec ~/.config/polybar/scripts/power.sh "$bg" "$fg"
# ----------------------------------------

# Cycle.py--------------------------------
bindsym $mod+Tab nop window next
bindsym $mod+Shift+Tab nop window prev
bindsym $mod+Ctrl+Tab nop window selector
bindsym $mod+Shift+a nop window swap
# ----------------------------------------

bindsym $mod+z exec i3-msg open # empty window container
bindsym Print exec spectacle # screenshot

# Execs-----------------------------------
# A fix to get it to ask for sudo password when launching apps like mintupdate
# sudo apt install policykit-desktop-privileges
# sudo apt install policykit-1-gnome
$exec /usr/lib/policykit-1-gnome/polkit-gnome-authentication-agent-1
$exec nm-applet #network applet

$exec ckb-next -b
$exec indicator-sensors # CPU & GPU temps

$exec mpd
#$exec cava -p ~/.config/cava/polybar.conf

$exec picom &

$exec_always ~/.config/polybar/launch.sh

#----These are testing cycle.py
bindsym $mod+a exec ~/.config/polybar/scripts/cycle.py --menu_colors "$bg" "$fg" "$fg" "$bg" &
$exec_always kill $(pgrep -f "cycle.py") &
#----cycle.py

#$exec_always ~/.config/polybar/scripts/cycle.py --menu_colors "$bg" "$fg" "$fg" "$bg" &
#$exec google-chrome --class="Netflix" --user-data-dir=~/chrome-private https://www.netflix.com
